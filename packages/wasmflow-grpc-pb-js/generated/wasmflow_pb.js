// source: wasmflow.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.wasmflow.CollectionFeatures', null, global);
goog.exportSymbol('proto.wasmflow.CollectionSignature', null, global);
goog.exportSymbol('proto.wasmflow.Component', null, global);
goog.exportSymbol('proto.wasmflow.Component.ComponentKind', null, global);
goog.exportSymbol('proto.wasmflow.DurationStatistics', null, global);
goog.exportSymbol('proto.wasmflow.EnumSignature', null, global);
goog.exportSymbol('proto.wasmflow.EnumVariant', null, global);
goog.exportSymbol('proto.wasmflow.Failure', null, global);
goog.exportSymbol('proto.wasmflow.Failure.FailureKind', null, global);
goog.exportSymbol('proto.wasmflow.HostedType', null, global);
goog.exportSymbol('proto.wasmflow.HostedType.TypeCase', null, global);
goog.exportSymbol('proto.wasmflow.InherentData', null, global);
goog.exportSymbol('proto.wasmflow.InternalType', null, global);
goog.exportSymbol('proto.wasmflow.Invocation', null, global);
goog.exportSymbol('proto.wasmflow.LinkType', null, global);
goog.exportSymbol('proto.wasmflow.ListRequest', null, global);
goog.exportSymbol('proto.wasmflow.ListResponse', null, global);
goog.exportSymbol('proto.wasmflow.ListType', null, global);
goog.exportSymbol('proto.wasmflow.MapType', null, global);
goog.exportSymbol('proto.wasmflow.OptionalType', null, global);
goog.exportSymbol('proto.wasmflow.Output', null, global);
goog.exportSymbol('proto.wasmflow.Packet', null, global);
goog.exportSymbol('proto.wasmflow.Packet.DataCase', null, global);
goog.exportSymbol('proto.wasmflow.PayloadData', null, global);
goog.exportSymbol('proto.wasmflow.PayloadData.DataCase', null, global);
goog.exportSymbol('proto.wasmflow.RefType', null, global);
goog.exportSymbol('proto.wasmflow.Serialized', null, global);
goog.exportSymbol('proto.wasmflow.Signal', null, global);
goog.exportSymbol('proto.wasmflow.Signal.OutputSignal', null, global);
goog.exportSymbol('proto.wasmflow.SimpleType', null, global);
goog.exportSymbol('proto.wasmflow.SimpleType.ApexType', null, global);
goog.exportSymbol('proto.wasmflow.Statistic', null, global);
goog.exportSymbol('proto.wasmflow.StatsRequest', null, global);
goog.exportSymbol('proto.wasmflow.StatsResponse', null, global);
goog.exportSymbol('proto.wasmflow.StructSignature', null, global);
goog.exportSymbol('proto.wasmflow.StructType', null, global);
goog.exportSymbol('proto.wasmflow.TypeDefinition', null, global);
goog.exportSymbol('proto.wasmflow.TypeDefinition.TypeCase', null, global);
goog.exportSymbol('proto.wasmflow.TypeSignature', null, global);
goog.exportSymbol('proto.wasmflow.TypeSignature.SignatureCase', null, global);
goog.exportSymbol('proto.wasmflow.WellKnownSchema', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.Packet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wasmflow.Packet.oneofGroups_);
};
goog.inherits(proto.wasmflow.Packet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.Packet.displayName = 'proto.wasmflow.Packet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.Serialized = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.Serialized, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.Serialized.displayName = 'proto.wasmflow.Serialized';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.Failure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.Failure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.Failure.displayName = 'proto.wasmflow.Failure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.Signal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.Signal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.Signal.displayName = 'proto.wasmflow.Signal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.PayloadData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wasmflow.PayloadData.oneofGroups_);
};
goog.inherits(proto.wasmflow.PayloadData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.PayloadData.displayName = 'proto.wasmflow.PayloadData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.Invocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.Invocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.Invocation.displayName = 'proto.wasmflow.Invocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.InherentData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.InherentData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.InherentData.displayName = 'proto.wasmflow.InherentData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.Output = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.Output, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.Output.displayName = 'proto.wasmflow.Output';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.ListRequest.displayName = 'proto.wasmflow.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wasmflow.ListResponse.repeatedFields_, null);
};
goog.inherits(proto.wasmflow.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.ListResponse.displayName = 'proto.wasmflow.ListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.HostedType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wasmflow.HostedType.oneofGroups_);
};
goog.inherits(proto.wasmflow.HostedType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.HostedType.displayName = 'proto.wasmflow.HostedType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.Component = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.Component, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.Component.displayName = 'proto.wasmflow.Component';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.CollectionSignature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wasmflow.CollectionSignature.repeatedFields_, null);
};
goog.inherits(proto.wasmflow.CollectionSignature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.CollectionSignature.displayName = 'proto.wasmflow.CollectionSignature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.CollectionFeatures = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.CollectionFeatures, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.CollectionFeatures.displayName = 'proto.wasmflow.CollectionFeatures';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.TypeDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wasmflow.TypeDefinition.oneofGroups_);
};
goog.inherits(proto.wasmflow.TypeDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.TypeDefinition.displayName = 'proto.wasmflow.TypeDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.WellKnownSchema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wasmflow.WellKnownSchema.repeatedFields_, null);
};
goog.inherits(proto.wasmflow.WellKnownSchema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.WellKnownSchema.displayName = 'proto.wasmflow.WellKnownSchema';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.StatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.StatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.StatsRequest.displayName = 'proto.wasmflow.StatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.StatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wasmflow.StatsResponse.repeatedFields_, null);
};
goog.inherits(proto.wasmflow.StatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.StatsResponse.displayName = 'proto.wasmflow.StatsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.Statistic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.Statistic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.Statistic.displayName = 'proto.wasmflow.Statistic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.DurationStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.DurationStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.DurationStatistics.displayName = 'proto.wasmflow.DurationStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.StructSignature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.StructSignature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.StructSignature.displayName = 'proto.wasmflow.StructSignature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.EnumSignature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wasmflow.EnumSignature.repeatedFields_, null);
};
goog.inherits(proto.wasmflow.EnumSignature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.EnumSignature.displayName = 'proto.wasmflow.EnumSignature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.EnumVariant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.EnumVariant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.EnumVariant.displayName = 'proto.wasmflow.EnumVariant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.TypeSignature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wasmflow.TypeSignature.oneofGroups_);
};
goog.inherits(proto.wasmflow.TypeSignature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.TypeSignature.displayName = 'proto.wasmflow.TypeSignature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.SimpleType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.SimpleType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.SimpleType.displayName = 'proto.wasmflow.SimpleType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.RefType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.RefType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.RefType.displayName = 'proto.wasmflow.RefType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.StructType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.StructType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.StructType.displayName = 'proto.wasmflow.StructType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.LinkType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wasmflow.LinkType.repeatedFields_, null);
};
goog.inherits(proto.wasmflow.LinkType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.LinkType.displayName = 'proto.wasmflow.LinkType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.MapType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.MapType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.MapType.displayName = 'proto.wasmflow.MapType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.ListType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.ListType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.ListType.displayName = 'proto.wasmflow.ListType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wasmflow.OptionalType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wasmflow.OptionalType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wasmflow.OptionalType.displayName = 'proto.wasmflow.OptionalType';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wasmflow.Packet.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.wasmflow.Packet.DataCase = {
  DATA_NOT_SET: 0,
  SUCCESS: 1,
  FAILURE: 2,
  SIGNAL: 3
};

/**
 * @return {proto.wasmflow.Packet.DataCase}
 */
proto.wasmflow.Packet.prototype.getDataCase = function() {
  return /** @type {proto.wasmflow.Packet.DataCase} */(jspb.Message.computeOneofCase(this, proto.wasmflow.Packet.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.Packet.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.Packet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.Packet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Packet.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = msg.getSuccess()) && proto.wasmflow.Serialized.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && proto.wasmflow.Failure.toObject(includeInstance, f),
    signal: (f = msg.getSignal()) && proto.wasmflow.Signal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.Packet}
 */
proto.wasmflow.Packet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.Packet;
  return proto.wasmflow.Packet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.Packet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.Packet}
 */
proto.wasmflow.Packet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.Serialized;
      reader.readMessage(value,proto.wasmflow.Serialized.deserializeBinaryFromReader);
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.wasmflow.Failure;
      reader.readMessage(value,proto.wasmflow.Failure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    case 3:
      var value = new proto.wasmflow.Signal;
      reader.readMessage(value,proto.wasmflow.Signal.deserializeBinaryFromReader);
      msg.setSignal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.Packet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.Packet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.Packet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Packet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.Serialized.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wasmflow.Failure.serializeBinaryToWriter
    );
  }
  f = message.getSignal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.wasmflow.Signal.serializeBinaryToWriter
    );
  }
};


/**
 * optional Serialized success = 1;
 * @return {?proto.wasmflow.Serialized}
 */
proto.wasmflow.Packet.prototype.getSuccess = function() {
  return /** @type{?proto.wasmflow.Serialized} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.Serialized, 1));
};


/**
 * @param {?proto.wasmflow.Serialized|undefined} value
 * @return {!proto.wasmflow.Packet} returns this
*/
proto.wasmflow.Packet.prototype.setSuccess = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wasmflow.Packet.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Packet} returns this
 */
proto.wasmflow.Packet.prototype.clearSuccess = function() {
  return this.setSuccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Packet.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Failure failure = 2;
 * @return {?proto.wasmflow.Failure}
 */
proto.wasmflow.Packet.prototype.getFailure = function() {
  return /** @type{?proto.wasmflow.Failure} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.Failure, 2));
};


/**
 * @param {?proto.wasmflow.Failure|undefined} value
 * @return {!proto.wasmflow.Packet} returns this
*/
proto.wasmflow.Packet.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wasmflow.Packet.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Packet} returns this
 */
proto.wasmflow.Packet.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Packet.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Signal signal = 3;
 * @return {?proto.wasmflow.Signal}
 */
proto.wasmflow.Packet.prototype.getSignal = function() {
  return /** @type{?proto.wasmflow.Signal} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.Signal, 3));
};


/**
 * @param {?proto.wasmflow.Signal|undefined} value
 * @return {!proto.wasmflow.Packet} returns this
*/
proto.wasmflow.Packet.prototype.setSignal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.wasmflow.Packet.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Packet} returns this
 */
proto.wasmflow.Packet.prototype.clearSignal = function() {
  return this.setSignal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Packet.prototype.hasSignal = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.Serialized.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.Serialized.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.Serialized} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Serialized.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.wasmflow.PayloadData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.Serialized}
 */
proto.wasmflow.Serialized.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.Serialized;
  return proto.wasmflow.Serialized.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.Serialized} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.Serialized}
 */
proto.wasmflow.Serialized.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.PayloadData;
      reader.readMessage(value,proto.wasmflow.PayloadData.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.Serialized.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.Serialized.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.Serialized} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Serialized.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.PayloadData.serializeBinaryToWriter
    );
  }
};


/**
 * optional PayloadData payload = 1;
 * @return {?proto.wasmflow.PayloadData}
 */
proto.wasmflow.Serialized.prototype.getPayload = function() {
  return /** @type{?proto.wasmflow.PayloadData} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.PayloadData, 1));
};


/**
 * @param {?proto.wasmflow.PayloadData|undefined} value
 * @return {!proto.wasmflow.Serialized} returns this
*/
proto.wasmflow.Serialized.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Serialized} returns this
 */
proto.wasmflow.Serialized.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Serialized.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.Failure.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.Failure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.Failure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Failure.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.Failure}
 */
proto.wasmflow.Failure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.Failure;
  return proto.wasmflow.Failure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.Failure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.Failure}
 */
proto.wasmflow.Failure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    case 2:
      var value = /** @type {!proto.wasmflow.Failure.FailureKind} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.Failure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.Failure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.Failure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Failure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.wasmflow.Failure.FailureKind = {
  ERROR: 0,
  EXCEPTION: 1
};

/**
 * optional string payload = 1;
 * @return {string}
 */
proto.wasmflow.Failure.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Failure} returns this
 */
proto.wasmflow.Failure.prototype.setPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FailureKind type = 2;
 * @return {!proto.wasmflow.Failure.FailureKind}
 */
proto.wasmflow.Failure.prototype.getType = function() {
  return /** @type {!proto.wasmflow.Failure.FailureKind} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.wasmflow.Failure.FailureKind} value
 * @return {!proto.wasmflow.Failure} returns this
 */
proto.wasmflow.Failure.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.Signal.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.Signal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.Signal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Signal.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.wasmflow.PayloadData.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.Signal}
 */
proto.wasmflow.Signal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.Signal;
  return proto.wasmflow.Signal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.Signal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.Signal}
 */
proto.wasmflow.Signal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.PayloadData;
      reader.readMessage(value,proto.wasmflow.PayloadData.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 2:
      var value = /** @type {!proto.wasmflow.Signal.OutputSignal} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.Signal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.Signal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.Signal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Signal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.PayloadData.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.wasmflow.Signal.OutputSignal = {
  DONE: 0,
  OPENBRACKET: 1,
  CLOSEBRACKET: 2
};

/**
 * optional PayloadData payload = 1;
 * @return {?proto.wasmflow.PayloadData}
 */
proto.wasmflow.Signal.prototype.getPayload = function() {
  return /** @type{?proto.wasmflow.PayloadData} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.PayloadData, 1));
};


/**
 * @param {?proto.wasmflow.PayloadData|undefined} value
 * @return {!proto.wasmflow.Signal} returns this
*/
proto.wasmflow.Signal.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Signal} returns this
 */
proto.wasmflow.Signal.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Signal.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OutputSignal type = 2;
 * @return {!proto.wasmflow.Signal.OutputSignal}
 */
proto.wasmflow.Signal.prototype.getType = function() {
  return /** @type {!proto.wasmflow.Signal.OutputSignal} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.wasmflow.Signal.OutputSignal} value
 * @return {!proto.wasmflow.Signal} returns this
 */
proto.wasmflow.Signal.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wasmflow.PayloadData.oneofGroups_ = [[1,3]];

/**
 * @enum {number}
 */
proto.wasmflow.PayloadData.DataCase = {
  DATA_NOT_SET: 0,
  MESSAGEPACK: 1,
  JSON: 3
};

/**
 * @return {proto.wasmflow.PayloadData.DataCase}
 */
proto.wasmflow.PayloadData.prototype.getDataCase = function() {
  return /** @type {proto.wasmflow.PayloadData.DataCase} */(jspb.Message.computeOneofCase(this, proto.wasmflow.PayloadData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.PayloadData.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.PayloadData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.PayloadData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.PayloadData.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagepack: msg.getMessagepack_asB64(),
    json: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.PayloadData}
 */
proto.wasmflow.PayloadData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.PayloadData;
  return proto.wasmflow.PayloadData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.PayloadData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.PayloadData}
 */
proto.wasmflow.PayloadData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessagepack(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.PayloadData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.PayloadData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.PayloadData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.PayloadData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bytes messagepack = 1;
 * @return {string}
 */
proto.wasmflow.PayloadData.prototype.getMessagepack = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes messagepack = 1;
 * This is a type-conversion wrapper around `getMessagepack()`
 * @return {string}
 */
proto.wasmflow.PayloadData.prototype.getMessagepack_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessagepack()));
};


/**
 * optional bytes messagepack = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessagepack()`
 * @return {!Uint8Array}
 */
proto.wasmflow.PayloadData.prototype.getMessagepack_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessagepack()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wasmflow.PayloadData} returns this
 */
proto.wasmflow.PayloadData.prototype.setMessagepack = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.wasmflow.PayloadData.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.wasmflow.PayloadData} returns this
 */
proto.wasmflow.PayloadData.prototype.clearMessagepack = function() {
  return jspb.Message.setOneofField(this, 1, proto.wasmflow.PayloadData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.PayloadData.prototype.hasMessagepack = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string json = 3;
 * @return {string}
 */
proto.wasmflow.PayloadData.prototype.getJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.PayloadData} returns this
 */
proto.wasmflow.PayloadData.prototype.setJson = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.wasmflow.PayloadData.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.wasmflow.PayloadData} returns this
 */
proto.wasmflow.PayloadData.prototype.clearJson = function() {
  return jspb.Message.setOneofField(this, 3, proto.wasmflow.PayloadData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.PayloadData.prototype.hasJson = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.Invocation.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.Invocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.Invocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Invocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    origin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    target: jspb.Message.getFieldWithDefault(msg, 2, ""),
    payloadMap: (f = msg.getPayloadMap()) ? f.toObject(includeInstance, proto.wasmflow.Packet.toObject) : [],
    id: jspb.Message.getFieldWithDefault(msg, 4, ""),
    txId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    inherent: (f = msg.getInherent()) && proto.wasmflow.InherentData.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.wasmflow.Serialized.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.Invocation}
 */
proto.wasmflow.Invocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.Invocation;
  return proto.wasmflow.Invocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.Invocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.Invocation}
 */
proto.wasmflow.Invocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 3:
      var value = msg.getPayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.wasmflow.Packet.deserializeBinaryFromReader, "", new proto.wasmflow.Packet());
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxId(value);
      break;
    case 6:
      var value = new proto.wasmflow.InherentData;
      reader.readMessage(value,proto.wasmflow.InherentData.deserializeBinaryFromReader);
      msg.setInherent(value);
      break;
    case 7:
      var value = new proto.wasmflow.Serialized;
      reader.readMessage(value,proto.wasmflow.Serialized.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.Invocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.Invocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.Invocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Invocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrigin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.wasmflow.Packet.serializeBinaryToWriter);
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTxId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInherent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.wasmflow.InherentData.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.wasmflow.Serialized.serializeBinaryToWriter
    );
  }
};


/**
 * optional string origin = 1;
 * @return {string}
 */
proto.wasmflow.Invocation.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Invocation} returns this
 */
proto.wasmflow.Invocation.prototype.setOrigin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string target = 2;
 * @return {string}
 */
proto.wasmflow.Invocation.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Invocation} returns this
 */
proto.wasmflow.Invocation.prototype.setTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, Packet> payload = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.wasmflow.Packet>}
 */
proto.wasmflow.Invocation.prototype.getPayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.wasmflow.Packet>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.wasmflow.Packet));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.wasmflow.Invocation} returns this
 */
proto.wasmflow.Invocation.prototype.clearPayloadMap = function() {
  this.getPayloadMap().clear();
  return this;};


/**
 * optional string id = 4;
 * @return {string}
 */
proto.wasmflow.Invocation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Invocation} returns this
 */
proto.wasmflow.Invocation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tx_id = 5;
 * @return {string}
 */
proto.wasmflow.Invocation.prototype.getTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Invocation} returns this
 */
proto.wasmflow.Invocation.prototype.setTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional InherentData inherent = 6;
 * @return {?proto.wasmflow.InherentData}
 */
proto.wasmflow.Invocation.prototype.getInherent = function() {
  return /** @type{?proto.wasmflow.InherentData} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.InherentData, 6));
};


/**
 * @param {?proto.wasmflow.InherentData|undefined} value
 * @return {!proto.wasmflow.Invocation} returns this
*/
proto.wasmflow.Invocation.prototype.setInherent = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Invocation} returns this
 */
proto.wasmflow.Invocation.prototype.clearInherent = function() {
  return this.setInherent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Invocation.prototype.hasInherent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Serialized config = 7;
 * @return {?proto.wasmflow.Serialized}
 */
proto.wasmflow.Invocation.prototype.getConfig = function() {
  return /** @type{?proto.wasmflow.Serialized} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.Serialized, 7));
};


/**
 * @param {?proto.wasmflow.Serialized|undefined} value
 * @return {!proto.wasmflow.Invocation} returns this
*/
proto.wasmflow.Invocation.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Invocation} returns this
 */
proto.wasmflow.Invocation.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Invocation.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.InherentData.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.InherentData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.InherentData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.InherentData.toObject = function(includeInstance, msg) {
  var f, obj = {
    seed: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.InherentData}
 */
proto.wasmflow.InherentData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.InherentData;
  return proto.wasmflow.InherentData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.InherentData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.InherentData}
 */
proto.wasmflow.InherentData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.InherentData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.InherentData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.InherentData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.InherentData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeed();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 seed = 1;
 * @return {number}
 */
proto.wasmflow.InherentData.prototype.getSeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.InherentData} returns this
 */
proto.wasmflow.InherentData.prototype.setSeed = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 timestamp = 2;
 * @return {number}
 */
proto.wasmflow.InherentData.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.InherentData} returns this
 */
proto.wasmflow.InherentData.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.Output.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.Output.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.Output} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Output.toObject = function(includeInstance, msg) {
  var f, obj = {
    port: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invocationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    payload: (f = msg.getPayload()) && proto.wasmflow.Packet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.Output}
 */
proto.wasmflow.Output.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.Output;
  return proto.wasmflow.Output.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.Output} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.Output}
 */
proto.wasmflow.Output.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPort(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvocationId(value);
      break;
    case 3:
      var value = new proto.wasmflow.Packet;
      reader.readMessage(value,proto.wasmflow.Packet.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.Output.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.Output.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.Output} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Output.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPort();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInvocationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.wasmflow.Packet.serializeBinaryToWriter
    );
  }
};


/**
 * optional string port = 1;
 * @return {string}
 */
proto.wasmflow.Output.prototype.getPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Output} returns this
 */
proto.wasmflow.Output.prototype.setPort = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string invocation_id = 2;
 * @return {string}
 */
proto.wasmflow.Output.prototype.getInvocationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Output} returns this
 */
proto.wasmflow.Output.prototype.setInvocationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Packet payload = 3;
 * @return {?proto.wasmflow.Packet}
 */
proto.wasmflow.Output.prototype.getPayload = function() {
  return /** @type{?proto.wasmflow.Packet} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.Packet, 3));
};


/**
 * @param {?proto.wasmflow.Packet|undefined} value
 * @return {!proto.wasmflow.Output} returns this
*/
proto.wasmflow.Output.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Output} returns this
 */
proto.wasmflow.Output.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Output.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.ListRequest}
 */
proto.wasmflow.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.ListRequest;
  return proto.wasmflow.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.ListRequest}
 */
proto.wasmflow.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wasmflow.ListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemasList: jspb.Message.toObjectList(msg.getSchemasList(),
    proto.wasmflow.HostedType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.ListResponse}
 */
proto.wasmflow.ListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.ListResponse;
  return proto.wasmflow.ListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.ListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.ListResponse}
 */
proto.wasmflow.ListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.HostedType;
      reader.readMessage(value,proto.wasmflow.HostedType.deserializeBinaryFromReader);
      msg.addSchemas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.ListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.ListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.ListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.ListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.wasmflow.HostedType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated HostedType schemas = 1;
 * @return {!Array<!proto.wasmflow.HostedType>}
 */
proto.wasmflow.ListResponse.prototype.getSchemasList = function() {
  return /** @type{!Array<!proto.wasmflow.HostedType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wasmflow.HostedType, 1));
};


/**
 * @param {!Array<!proto.wasmflow.HostedType>} value
 * @return {!proto.wasmflow.ListResponse} returns this
*/
proto.wasmflow.ListResponse.prototype.setSchemasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.wasmflow.HostedType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wasmflow.HostedType}
 */
proto.wasmflow.ListResponse.prototype.addSchemas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.wasmflow.HostedType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wasmflow.ListResponse} returns this
 */
proto.wasmflow.ListResponse.prototype.clearSchemasList = function() {
  return this.setSchemasList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wasmflow.HostedType.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.wasmflow.HostedType.TypeCase = {
  TYPE_NOT_SET: 0,
  COLLECTION: 1
};

/**
 * @return {proto.wasmflow.HostedType.TypeCase}
 */
proto.wasmflow.HostedType.prototype.getTypeCase = function() {
  return /** @type {proto.wasmflow.HostedType.TypeCase} */(jspb.Message.computeOneofCase(this, proto.wasmflow.HostedType.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.HostedType.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.HostedType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.HostedType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.HostedType.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: (f = msg.getCollection()) && proto.wasmflow.CollectionSignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.HostedType}
 */
proto.wasmflow.HostedType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.HostedType;
  return proto.wasmflow.HostedType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.HostedType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.HostedType}
 */
proto.wasmflow.HostedType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.CollectionSignature;
      reader.readMessage(value,proto.wasmflow.CollectionSignature.deserializeBinaryFromReader);
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.HostedType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.HostedType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.HostedType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.HostedType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.CollectionSignature.serializeBinaryToWriter
    );
  }
};


/**
 * optional CollectionSignature collection = 1;
 * @return {?proto.wasmflow.CollectionSignature}
 */
proto.wasmflow.HostedType.prototype.getCollection = function() {
  return /** @type{?proto.wasmflow.CollectionSignature} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.CollectionSignature, 1));
};


/**
 * @param {?proto.wasmflow.CollectionSignature|undefined} value
 * @return {!proto.wasmflow.HostedType} returns this
*/
proto.wasmflow.HostedType.prototype.setCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wasmflow.HostedType.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.HostedType} returns this
 */
proto.wasmflow.HostedType.prototype.clearCollection = function() {
  return this.setCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.HostedType.prototype.hasCollection = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.Component.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.Component.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.Component} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Component.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 2, 0),
    inputsMap: (f = msg.getInputsMap()) ? f.toObject(includeInstance, proto.wasmflow.TypeSignature.toObject) : [],
    outputsMap: (f = msg.getOutputsMap()) ? f.toObject(includeInstance, proto.wasmflow.TypeSignature.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.Component}
 */
proto.wasmflow.Component.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.Component;
  return proto.wasmflow.Component.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.Component} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.Component}
 */
proto.wasmflow.Component.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.wasmflow.Component.ComponentKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 3:
      var value = msg.getInputsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.wasmflow.TypeSignature.deserializeBinaryFromReader, "", new proto.wasmflow.TypeSignature());
         });
      break;
    case 4:
      var value = msg.getOutputsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.wasmflow.TypeSignature.deserializeBinaryFromReader, "", new proto.wasmflow.TypeSignature());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.Component.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.Component.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.Component} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Component.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getInputsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.wasmflow.TypeSignature.serializeBinaryToWriter);
  }
  f = message.getOutputsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.wasmflow.TypeSignature.serializeBinaryToWriter);
  }
};


/**
 * @enum {number}
 */
proto.wasmflow.Component.ComponentKind = {
  COMPONENT: 0,
  SCHEMATIC: 1
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.wasmflow.Component.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Component} returns this
 */
proto.wasmflow.Component.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ComponentKind kind = 2;
 * @return {!proto.wasmflow.Component.ComponentKind}
 */
proto.wasmflow.Component.prototype.getKind = function() {
  return /** @type {!proto.wasmflow.Component.ComponentKind} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.wasmflow.Component.ComponentKind} value
 * @return {!proto.wasmflow.Component} returns this
 */
proto.wasmflow.Component.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * map<string, TypeSignature> inputs = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.wasmflow.TypeSignature>}
 */
proto.wasmflow.Component.prototype.getInputsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.wasmflow.TypeSignature>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.wasmflow.TypeSignature));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.wasmflow.Component} returns this
 */
proto.wasmflow.Component.prototype.clearInputsMap = function() {
  this.getInputsMap().clear();
  return this;};


/**
 * map<string, TypeSignature> outputs = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.wasmflow.TypeSignature>}
 */
proto.wasmflow.Component.prototype.getOutputsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.wasmflow.TypeSignature>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.wasmflow.TypeSignature));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.wasmflow.Component} returns this
 */
proto.wasmflow.Component.prototype.clearOutputsMap = function() {
  this.getOutputsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wasmflow.CollectionSignature.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.CollectionSignature.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.CollectionSignature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.CollectionSignature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.CollectionSignature.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    features: (f = msg.getFeatures()) && proto.wasmflow.CollectionFeatures.toObject(includeInstance, f),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    format: jspb.Message.getFieldWithDefault(msg, 6, 0),
    componentsMap: (f = msg.getComponentsMap()) ? f.toObject(includeInstance, proto.wasmflow.Component.toObject) : [],
    typesMap: (f = msg.getTypesMap()) ? f.toObject(includeInstance, proto.wasmflow.TypeDefinition.toObject) : [],
    configMap: (f = msg.getConfigMap()) ? f.toObject(includeInstance, proto.wasmflow.TypeDefinition.toObject) : [],
    wellknownList: jspb.Message.toObjectList(msg.getWellknownList(),
    proto.wasmflow.WellKnownSchema.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.CollectionSignature}
 */
proto.wasmflow.CollectionSignature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.CollectionSignature;
  return proto.wasmflow.CollectionSignature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.CollectionSignature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.CollectionSignature}
 */
proto.wasmflow.CollectionSignature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = new proto.wasmflow.CollectionFeatures;
      reader.readMessage(value,proto.wasmflow.CollectionFeatures.deserializeBinaryFromReader);
      msg.setFeatures(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFormat(value);
      break;
    case 3:
      var value = msg.getComponentsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.wasmflow.Component.deserializeBinaryFromReader, "", new proto.wasmflow.Component());
         });
      break;
    case 4:
      var value = msg.getTypesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.wasmflow.TypeDefinition.deserializeBinaryFromReader, "", new proto.wasmflow.TypeDefinition());
         });
      break;
    case 5:
      var value = msg.getConfigMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.wasmflow.TypeDefinition.deserializeBinaryFromReader, "", new proto.wasmflow.TypeDefinition());
         });
      break;
    case 7:
      var value = new proto.wasmflow.WellKnownSchema;
      reader.readMessage(value,proto.wasmflow.WellKnownSchema.deserializeBinaryFromReader);
      msg.addWellknown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.CollectionSignature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.CollectionSignature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.CollectionSignature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.CollectionSignature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeatures();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.wasmflow.CollectionFeatures.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFormat();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getComponentsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.wasmflow.Component.serializeBinaryToWriter);
  }
  f = message.getTypesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.wasmflow.TypeDefinition.serializeBinaryToWriter);
  }
  f = message.getConfigMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.wasmflow.TypeDefinition.serializeBinaryToWriter);
  }
  f = message.getWellknownList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.wasmflow.WellKnownSchema.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wasmflow.CollectionSignature.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.CollectionSignature} returns this
 */
proto.wasmflow.CollectionSignature.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionFeatures features = 8;
 * @return {?proto.wasmflow.CollectionFeatures}
 */
proto.wasmflow.CollectionSignature.prototype.getFeatures = function() {
  return /** @type{?proto.wasmflow.CollectionFeatures} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.CollectionFeatures, 8));
};


/**
 * @param {?proto.wasmflow.CollectionFeatures|undefined} value
 * @return {!proto.wasmflow.CollectionSignature} returns this
*/
proto.wasmflow.CollectionSignature.prototype.setFeatures = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.CollectionSignature} returns this
 */
proto.wasmflow.CollectionSignature.prototype.clearFeatures = function() {
  return this.setFeatures(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.CollectionSignature.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.wasmflow.CollectionSignature.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.CollectionSignature} returns this
 */
proto.wasmflow.CollectionSignature.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 format = 6;
 * @return {number}
 */
proto.wasmflow.CollectionSignature.prototype.getFormat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.CollectionSignature} returns this
 */
proto.wasmflow.CollectionSignature.prototype.setFormat = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * map<string, Component> components = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.wasmflow.Component>}
 */
proto.wasmflow.CollectionSignature.prototype.getComponentsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.wasmflow.Component>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.wasmflow.Component));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.wasmflow.CollectionSignature} returns this
 */
proto.wasmflow.CollectionSignature.prototype.clearComponentsMap = function() {
  this.getComponentsMap().clear();
  return this;};


/**
 * map<string, TypeDefinition> types = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.wasmflow.TypeDefinition>}
 */
proto.wasmflow.CollectionSignature.prototype.getTypesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.wasmflow.TypeDefinition>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.wasmflow.TypeDefinition));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.wasmflow.CollectionSignature} returns this
 */
proto.wasmflow.CollectionSignature.prototype.clearTypesMap = function() {
  this.getTypesMap().clear();
  return this;};


/**
 * map<string, TypeDefinition> config = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.wasmflow.TypeDefinition>}
 */
proto.wasmflow.CollectionSignature.prototype.getConfigMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.wasmflow.TypeDefinition>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.wasmflow.TypeDefinition));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.wasmflow.CollectionSignature} returns this
 */
proto.wasmflow.CollectionSignature.prototype.clearConfigMap = function() {
  this.getConfigMap().clear();
  return this;};


/**
 * repeated WellKnownSchema wellknown = 7;
 * @return {!Array<!proto.wasmflow.WellKnownSchema>}
 */
proto.wasmflow.CollectionSignature.prototype.getWellknownList = function() {
  return /** @type{!Array<!proto.wasmflow.WellKnownSchema>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wasmflow.WellKnownSchema, 7));
};


/**
 * @param {!Array<!proto.wasmflow.WellKnownSchema>} value
 * @return {!proto.wasmflow.CollectionSignature} returns this
*/
proto.wasmflow.CollectionSignature.prototype.setWellknownList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.wasmflow.WellKnownSchema=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wasmflow.WellKnownSchema}
 */
proto.wasmflow.CollectionSignature.prototype.addWellknown = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.wasmflow.WellKnownSchema, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wasmflow.CollectionSignature} returns this
 */
proto.wasmflow.CollectionSignature.prototype.clearWellknownList = function() {
  return this.setWellknownList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.CollectionFeatures.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.CollectionFeatures.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.CollectionFeatures} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.CollectionFeatures.toObject = function(includeInstance, msg) {
  var f, obj = {
    streaming: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    stateful: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    version: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.CollectionFeatures}
 */
proto.wasmflow.CollectionFeatures.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.CollectionFeatures;
  return proto.wasmflow.CollectionFeatures.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.CollectionFeatures} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.CollectionFeatures}
 */
proto.wasmflow.CollectionFeatures.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStreaming(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStateful(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.CollectionFeatures.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.CollectionFeatures.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.CollectionFeatures} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.CollectionFeatures.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreaming();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStateful();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bool streaming = 1;
 * @return {boolean}
 */
proto.wasmflow.CollectionFeatures.prototype.getStreaming = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wasmflow.CollectionFeatures} returns this
 */
proto.wasmflow.CollectionFeatures.prototype.setStreaming = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool stateful = 2;
 * @return {boolean}
 */
proto.wasmflow.CollectionFeatures.prototype.getStateful = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wasmflow.CollectionFeatures} returns this
 */
proto.wasmflow.CollectionFeatures.prototype.setStateful = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint32 version = 3;
 * @return {number}
 */
proto.wasmflow.CollectionFeatures.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.CollectionFeatures} returns this
 */
proto.wasmflow.CollectionFeatures.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wasmflow.TypeDefinition.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.wasmflow.TypeDefinition.TypeCase = {
  TYPE_NOT_SET: 0,
  STRUCT: 1,
  ENUM: 2
};

/**
 * @return {proto.wasmflow.TypeDefinition.TypeCase}
 */
proto.wasmflow.TypeDefinition.prototype.getTypeCase = function() {
  return /** @type {proto.wasmflow.TypeDefinition.TypeCase} */(jspb.Message.computeOneofCase(this, proto.wasmflow.TypeDefinition.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.TypeDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.TypeDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.TypeDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.TypeDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    struct: (f = msg.getStruct()) && proto.wasmflow.StructSignature.toObject(includeInstance, f),
    pb_enum: (f = msg.getEnum()) && proto.wasmflow.EnumSignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.TypeDefinition}
 */
proto.wasmflow.TypeDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.TypeDefinition;
  return proto.wasmflow.TypeDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.TypeDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.TypeDefinition}
 */
proto.wasmflow.TypeDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.StructSignature;
      reader.readMessage(value,proto.wasmflow.StructSignature.deserializeBinaryFromReader);
      msg.setStruct(value);
      break;
    case 2:
      var value = new proto.wasmflow.EnumSignature;
      reader.readMessage(value,proto.wasmflow.EnumSignature.deserializeBinaryFromReader);
      msg.setEnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.TypeDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.TypeDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.TypeDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.TypeDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStruct();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.StructSignature.serializeBinaryToWriter
    );
  }
  f = message.getEnum();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wasmflow.EnumSignature.serializeBinaryToWriter
    );
  }
};


/**
 * optional StructSignature struct = 1;
 * @return {?proto.wasmflow.StructSignature}
 */
proto.wasmflow.TypeDefinition.prototype.getStruct = function() {
  return /** @type{?proto.wasmflow.StructSignature} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.StructSignature, 1));
};


/**
 * @param {?proto.wasmflow.StructSignature|undefined} value
 * @return {!proto.wasmflow.TypeDefinition} returns this
*/
proto.wasmflow.TypeDefinition.prototype.setStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wasmflow.TypeDefinition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeDefinition} returns this
 */
proto.wasmflow.TypeDefinition.prototype.clearStruct = function() {
  return this.setStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeDefinition.prototype.hasStruct = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EnumSignature enum = 2;
 * @return {?proto.wasmflow.EnumSignature}
 */
proto.wasmflow.TypeDefinition.prototype.getEnum = function() {
  return /** @type{?proto.wasmflow.EnumSignature} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.EnumSignature, 2));
};


/**
 * @param {?proto.wasmflow.EnumSignature|undefined} value
 * @return {!proto.wasmflow.TypeDefinition} returns this
*/
proto.wasmflow.TypeDefinition.prototype.setEnum = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wasmflow.TypeDefinition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeDefinition} returns this
 */
proto.wasmflow.TypeDefinition.prototype.clearEnum = function() {
  return this.setEnum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeDefinition.prototype.hasEnum = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wasmflow.WellKnownSchema.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.WellKnownSchema.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.WellKnownSchema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.WellKnownSchema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.WellKnownSchema.toObject = function(includeInstance, msg) {
  var f, obj = {
    capabilitiesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schema: (f = msg.getSchema()) && proto.wasmflow.CollectionSignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.WellKnownSchema}
 */
proto.wasmflow.WellKnownSchema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.WellKnownSchema;
  return proto.wasmflow.WellKnownSchema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.WellKnownSchema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.WellKnownSchema}
 */
proto.wasmflow.WellKnownSchema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCapabilities(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = new proto.wasmflow.CollectionSignature;
      reader.readMessage(value,proto.wasmflow.CollectionSignature.deserializeBinaryFromReader);
      msg.setSchema(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.WellKnownSchema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.WellKnownSchema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.WellKnownSchema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.WellKnownSchema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCapabilitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchema();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.wasmflow.CollectionSignature.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string capabilities = 1;
 * @return {!Array<string>}
 */
proto.wasmflow.WellKnownSchema.prototype.getCapabilitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.wasmflow.WellKnownSchema} returns this
 */
proto.wasmflow.WellKnownSchema.prototype.setCapabilitiesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.wasmflow.WellKnownSchema} returns this
 */
proto.wasmflow.WellKnownSchema.prototype.addCapabilities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wasmflow.WellKnownSchema} returns this
 */
proto.wasmflow.WellKnownSchema.prototype.clearCapabilitiesList = function() {
  return this.setCapabilitiesList([]);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.wasmflow.WellKnownSchema.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.WellKnownSchema} returns this
 */
proto.wasmflow.WellKnownSchema.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CollectionSignature schema = 3;
 * @return {?proto.wasmflow.CollectionSignature}
 */
proto.wasmflow.WellKnownSchema.prototype.getSchema = function() {
  return /** @type{?proto.wasmflow.CollectionSignature} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.CollectionSignature, 3));
};


/**
 * @param {?proto.wasmflow.CollectionSignature|undefined} value
 * @return {!proto.wasmflow.WellKnownSchema} returns this
*/
proto.wasmflow.WellKnownSchema.prototype.setSchema = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.WellKnownSchema} returns this
 */
proto.wasmflow.WellKnownSchema.prototype.clearSchema = function() {
  return this.setSchema(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.WellKnownSchema.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.StatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.StatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.StatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.StatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.StatsRequest}
 */
proto.wasmflow.StatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.StatsRequest;
  return proto.wasmflow.StatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.StatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.StatsRequest}
 */
proto.wasmflow.StatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.StatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.StatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.StatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.StatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wasmflow.StatsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.StatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.StatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.StatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.StatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statsList: jspb.Message.toObjectList(msg.getStatsList(),
    proto.wasmflow.Statistic.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.StatsResponse}
 */
proto.wasmflow.StatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.StatsResponse;
  return proto.wasmflow.StatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.StatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.StatsResponse}
 */
proto.wasmflow.StatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.Statistic;
      reader.readMessage(value,proto.wasmflow.Statistic.deserializeBinaryFromReader);
      msg.addStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.StatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.StatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.StatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.StatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.wasmflow.Statistic.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Statistic stats = 1;
 * @return {!Array<!proto.wasmflow.Statistic>}
 */
proto.wasmflow.StatsResponse.prototype.getStatsList = function() {
  return /** @type{!Array<!proto.wasmflow.Statistic>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wasmflow.Statistic, 1));
};


/**
 * @param {!Array<!proto.wasmflow.Statistic>} value
 * @return {!proto.wasmflow.StatsResponse} returns this
*/
proto.wasmflow.StatsResponse.prototype.setStatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.wasmflow.Statistic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wasmflow.Statistic}
 */
proto.wasmflow.StatsResponse.prototype.addStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.wasmflow.Statistic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wasmflow.StatsResponse} returns this
 */
proto.wasmflow.StatsResponse.prototype.clearStatsList = function() {
  return this.setStatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.Statistic.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.Statistic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.Statistic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Statistic.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    runs: jspb.Message.getFieldWithDefault(msg, 2, 0),
    errors: jspb.Message.getFieldWithDefault(msg, 3, 0),
    executionStatistics: (f = msg.getExecutionStatistics()) && proto.wasmflow.DurationStatistics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.Statistic}
 */
proto.wasmflow.Statistic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.Statistic;
  return proto.wasmflow.Statistic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.Statistic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.Statistic}
 */
proto.wasmflow.Statistic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRuns(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setErrors(value);
      break;
    case 4:
      var value = new proto.wasmflow.DurationStatistics;
      reader.readMessage(value,proto.wasmflow.DurationStatistics.deserializeBinaryFromReader);
      msg.setExecutionStatistics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.Statistic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.Statistic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.Statistic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.Statistic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRuns();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getErrors();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getExecutionStatistics();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.wasmflow.DurationStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wasmflow.Statistic.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.Statistic} returns this
 */
proto.wasmflow.Statistic.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 runs = 2;
 * @return {number}
 */
proto.wasmflow.Statistic.prototype.getRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.Statistic} returns this
 */
proto.wasmflow.Statistic.prototype.setRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 errors = 3;
 * @return {number}
 */
proto.wasmflow.Statistic.prototype.getErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.Statistic} returns this
 */
proto.wasmflow.Statistic.prototype.setErrors = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional DurationStatistics execution_statistics = 4;
 * @return {?proto.wasmflow.DurationStatistics}
 */
proto.wasmflow.Statistic.prototype.getExecutionStatistics = function() {
  return /** @type{?proto.wasmflow.DurationStatistics} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.DurationStatistics, 4));
};


/**
 * @param {?proto.wasmflow.DurationStatistics|undefined} value
 * @return {!proto.wasmflow.Statistic} returns this
*/
proto.wasmflow.Statistic.prototype.setExecutionStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.Statistic} returns this
 */
proto.wasmflow.Statistic.prototype.clearExecutionStatistics = function() {
  return this.setExecutionStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.Statistic.prototype.hasExecutionStatistics = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.DurationStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.DurationStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.DurationStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.DurationStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: jspb.Message.getFieldWithDefault(msg, 1, 0),
    max: jspb.Message.getFieldWithDefault(msg, 2, 0),
    average: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.DurationStatistics}
 */
proto.wasmflow.DurationStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.DurationStatistics;
  return proto.wasmflow.DurationStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.DurationStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.DurationStatistics}
 */
proto.wasmflow.DurationStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMax(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAverage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.DurationStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.DurationStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.DurationStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.DurationStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAverage();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 min = 1;
 * @return {number}
 */
proto.wasmflow.DurationStatistics.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.DurationStatistics} returns this
 */
proto.wasmflow.DurationStatistics.prototype.setMin = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 max = 2;
 * @return {number}
 */
proto.wasmflow.DurationStatistics.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.DurationStatistics} returns this
 */
proto.wasmflow.DurationStatistics.prototype.setMax = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 average = 3;
 * @return {number}
 */
proto.wasmflow.DurationStatistics.prototype.getAverage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.DurationStatistics} returns this
 */
proto.wasmflow.DurationStatistics.prototype.setAverage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.StructSignature.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.StructSignature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.StructSignature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.StructSignature.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.wasmflow.TypeSignature.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.StructSignature}
 */
proto.wasmflow.StructSignature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.StructSignature;
  return proto.wasmflow.StructSignature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.StructSignature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.StructSignature}
 */
proto.wasmflow.StructSignature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.wasmflow.TypeSignature.deserializeBinaryFromReader, "", new proto.wasmflow.TypeSignature());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.StructSignature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.StructSignature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.StructSignature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.StructSignature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.wasmflow.TypeSignature.serializeBinaryToWriter);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wasmflow.StructSignature.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.StructSignature} returns this
 */
proto.wasmflow.StructSignature.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, TypeSignature> fields = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.wasmflow.TypeSignature>}
 */
proto.wasmflow.StructSignature.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.wasmflow.TypeSignature>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.wasmflow.TypeSignature));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.wasmflow.StructSignature} returns this
 */
proto.wasmflow.StructSignature.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wasmflow.EnumSignature.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.EnumSignature.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.EnumSignature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.EnumSignature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.EnumSignature.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.wasmflow.EnumVariant.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.EnumSignature}
 */
proto.wasmflow.EnumSignature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.EnumSignature;
  return proto.wasmflow.EnumSignature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.EnumSignature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.EnumSignature}
 */
proto.wasmflow.EnumSignature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.wasmflow.EnumVariant;
      reader.readMessage(value,proto.wasmflow.EnumVariant.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.EnumSignature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.EnumSignature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.EnumSignature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.EnumSignature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.wasmflow.EnumVariant.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wasmflow.EnumSignature.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.EnumSignature} returns this
 */
proto.wasmflow.EnumSignature.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated EnumVariant values = 2;
 * @return {!Array<!proto.wasmflow.EnumVariant>}
 */
proto.wasmflow.EnumSignature.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.wasmflow.EnumVariant>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wasmflow.EnumVariant, 2));
};


/**
 * @param {!Array<!proto.wasmflow.EnumVariant>} value
 * @return {!proto.wasmflow.EnumSignature} returns this
*/
proto.wasmflow.EnumSignature.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.wasmflow.EnumVariant=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wasmflow.EnumVariant}
 */
proto.wasmflow.EnumSignature.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.wasmflow.EnumVariant, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wasmflow.EnumSignature} returns this
 */
proto.wasmflow.EnumSignature.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.EnumVariant.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.EnumVariant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.EnumVariant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.EnumVariant.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.EnumVariant}
 */
proto.wasmflow.EnumVariant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.EnumVariant;
  return proto.wasmflow.EnumVariant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.EnumVariant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.EnumVariant}
 */
proto.wasmflow.EnumVariant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.EnumVariant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.EnumVariant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.EnumVariant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.EnumVariant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wasmflow.EnumVariant.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.EnumVariant} returns this
 */
proto.wasmflow.EnumVariant.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.wasmflow.EnumVariant.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.wasmflow.EnumVariant} returns this
 */
proto.wasmflow.EnumVariant.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wasmflow.TypeSignature.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.wasmflow.TypeSignature.SignatureCase = {
  SIGNATURE_NOT_SET: 0,
  SIMPLE: 1,
  MAP: 2,
  LIST: 3,
  OPTIONAL: 4,
  REF: 5,
  LINK: 6,
  INTERNAL: 7,
  STRUCT: 8
};

/**
 * @return {proto.wasmflow.TypeSignature.SignatureCase}
 */
proto.wasmflow.TypeSignature.prototype.getSignatureCase = function() {
  return /** @type {proto.wasmflow.TypeSignature.SignatureCase} */(jspb.Message.computeOneofCase(this, proto.wasmflow.TypeSignature.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.TypeSignature.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.TypeSignature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.TypeSignature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.TypeSignature.toObject = function(includeInstance, msg) {
  var f, obj = {
    simple: (f = msg.getSimple()) && proto.wasmflow.SimpleType.toObject(includeInstance, f),
    map: (f = msg.getMap()) && proto.wasmflow.MapType.toObject(includeInstance, f),
    list: (f = msg.getList()) && proto.wasmflow.ListType.toObject(includeInstance, f),
    optional: (f = msg.getOptional()) && proto.wasmflow.OptionalType.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && proto.wasmflow.RefType.toObject(includeInstance, f),
    link: (f = msg.getLink()) && proto.wasmflow.LinkType.toObject(includeInstance, f),
    internal: jspb.Message.getFieldWithDefault(msg, 7, 0),
    struct: (f = msg.getStruct()) && proto.wasmflow.StructType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.TypeSignature}
 */
proto.wasmflow.TypeSignature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.TypeSignature;
  return proto.wasmflow.TypeSignature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.TypeSignature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.TypeSignature}
 */
proto.wasmflow.TypeSignature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.SimpleType;
      reader.readMessage(value,proto.wasmflow.SimpleType.deserializeBinaryFromReader);
      msg.setSimple(value);
      break;
    case 2:
      var value = new proto.wasmflow.MapType;
      reader.readMessage(value,proto.wasmflow.MapType.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    case 3:
      var value = new proto.wasmflow.ListType;
      reader.readMessage(value,proto.wasmflow.ListType.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    case 4:
      var value = new proto.wasmflow.OptionalType;
      reader.readMessage(value,proto.wasmflow.OptionalType.deserializeBinaryFromReader);
      msg.setOptional(value);
      break;
    case 5:
      var value = new proto.wasmflow.RefType;
      reader.readMessage(value,proto.wasmflow.RefType.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 6:
      var value = new proto.wasmflow.LinkType;
      reader.readMessage(value,proto.wasmflow.LinkType.deserializeBinaryFromReader);
      msg.setLink(value);
      break;
    case 7:
      var value = /** @type {!proto.wasmflow.InternalType} */ (reader.readEnum());
      msg.setInternal(value);
      break;
    case 8:
      var value = new proto.wasmflow.StructType;
      reader.readMessage(value,proto.wasmflow.StructType.deserializeBinaryFromReader);
      msg.setStruct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.TypeSignature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.TypeSignature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.TypeSignature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.TypeSignature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSimple();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.SimpleType.serializeBinaryToWriter
    );
  }
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wasmflow.MapType.serializeBinaryToWriter
    );
  }
  f = message.getList();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.wasmflow.ListType.serializeBinaryToWriter
    );
  }
  f = message.getOptional();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.wasmflow.OptionalType.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.wasmflow.RefType.serializeBinaryToWriter
    );
  }
  f = message.getLink();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.wasmflow.LinkType.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.wasmflow.InternalType} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getStruct();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.wasmflow.StructType.serializeBinaryToWriter
    );
  }
};


/**
 * optional SimpleType simple = 1;
 * @return {?proto.wasmflow.SimpleType}
 */
proto.wasmflow.TypeSignature.prototype.getSimple = function() {
  return /** @type{?proto.wasmflow.SimpleType} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.SimpleType, 1));
};


/**
 * @param {?proto.wasmflow.SimpleType|undefined} value
 * @return {!proto.wasmflow.TypeSignature} returns this
*/
proto.wasmflow.TypeSignature.prototype.setSimple = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wasmflow.TypeSignature.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.clearSimple = function() {
  return this.setSimple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeSignature.prototype.hasSimple = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MapType map = 2;
 * @return {?proto.wasmflow.MapType}
 */
proto.wasmflow.TypeSignature.prototype.getMap = function() {
  return /** @type{?proto.wasmflow.MapType} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.MapType, 2));
};


/**
 * @param {?proto.wasmflow.MapType|undefined} value
 * @return {!proto.wasmflow.TypeSignature} returns this
*/
proto.wasmflow.TypeSignature.prototype.setMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wasmflow.TypeSignature.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeSignature.prototype.hasMap = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListType list = 3;
 * @return {?proto.wasmflow.ListType}
 */
proto.wasmflow.TypeSignature.prototype.getList = function() {
  return /** @type{?proto.wasmflow.ListType} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.ListType, 3));
};


/**
 * @param {?proto.wasmflow.ListType|undefined} value
 * @return {!proto.wasmflow.TypeSignature} returns this
*/
proto.wasmflow.TypeSignature.prototype.setList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.wasmflow.TypeSignature.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.clearList = function() {
  return this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeSignature.prototype.hasList = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional OptionalType optional = 4;
 * @return {?proto.wasmflow.OptionalType}
 */
proto.wasmflow.TypeSignature.prototype.getOptional = function() {
  return /** @type{?proto.wasmflow.OptionalType} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.OptionalType, 4));
};


/**
 * @param {?proto.wasmflow.OptionalType|undefined} value
 * @return {!proto.wasmflow.TypeSignature} returns this
*/
proto.wasmflow.TypeSignature.prototype.setOptional = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.wasmflow.TypeSignature.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.clearOptional = function() {
  return this.setOptional(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeSignature.prototype.hasOptional = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RefType ref = 5;
 * @return {?proto.wasmflow.RefType}
 */
proto.wasmflow.TypeSignature.prototype.getRef = function() {
  return /** @type{?proto.wasmflow.RefType} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.RefType, 5));
};


/**
 * @param {?proto.wasmflow.RefType|undefined} value
 * @return {!proto.wasmflow.TypeSignature} returns this
*/
proto.wasmflow.TypeSignature.prototype.setRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.wasmflow.TypeSignature.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.clearRef = function() {
  return this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeSignature.prototype.hasRef = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional LinkType link = 6;
 * @return {?proto.wasmflow.LinkType}
 */
proto.wasmflow.TypeSignature.prototype.getLink = function() {
  return /** @type{?proto.wasmflow.LinkType} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.LinkType, 6));
};


/**
 * @param {?proto.wasmflow.LinkType|undefined} value
 * @return {!proto.wasmflow.TypeSignature} returns this
*/
proto.wasmflow.TypeSignature.prototype.setLink = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.wasmflow.TypeSignature.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.clearLink = function() {
  return this.setLink(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeSignature.prototype.hasLink = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional InternalType internal = 7;
 * @return {!proto.wasmflow.InternalType}
 */
proto.wasmflow.TypeSignature.prototype.getInternal = function() {
  return /** @type {!proto.wasmflow.InternalType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.wasmflow.InternalType} value
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.setInternal = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.wasmflow.TypeSignature.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.clearInternal = function() {
  return jspb.Message.setOneofField(this, 7, proto.wasmflow.TypeSignature.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeSignature.prototype.hasInternal = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional StructType struct = 8;
 * @return {?proto.wasmflow.StructType}
 */
proto.wasmflow.TypeSignature.prototype.getStruct = function() {
  return /** @type{?proto.wasmflow.StructType} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.StructType, 8));
};


/**
 * @param {?proto.wasmflow.StructType|undefined} value
 * @return {!proto.wasmflow.TypeSignature} returns this
*/
proto.wasmflow.TypeSignature.prototype.setStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.wasmflow.TypeSignature.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.TypeSignature} returns this
 */
proto.wasmflow.TypeSignature.prototype.clearStruct = function() {
  return this.setStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.TypeSignature.prototype.hasStruct = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.SimpleType.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.SimpleType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.SimpleType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.SimpleType.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.SimpleType}
 */
proto.wasmflow.SimpleType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.SimpleType;
  return proto.wasmflow.SimpleType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.SimpleType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.SimpleType}
 */
proto.wasmflow.SimpleType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.wasmflow.SimpleType.ApexType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.SimpleType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.SimpleType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.SimpleType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.SimpleType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.wasmflow.SimpleType.ApexType = {
  I8: 0,
  U8: 1,
  I16: 2,
  U16: 3,
  I32: 4,
  U32: 5,
  I64: 6,
  U64: 7,
  F32: 8,
  F64: 9,
  BOOL: 10,
  STRING: 11,
  DATETIME: 12,
  BYTES: 13,
  VALUE: 15
};

/**
 * optional ApexType type = 1;
 * @return {!proto.wasmflow.SimpleType.ApexType}
 */
proto.wasmflow.SimpleType.prototype.getType = function() {
  return /** @type {!proto.wasmflow.SimpleType.ApexType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.wasmflow.SimpleType.ApexType} value
 * @return {!proto.wasmflow.SimpleType} returns this
 */
proto.wasmflow.SimpleType.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.RefType.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.RefType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.RefType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.RefType.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.RefType}
 */
proto.wasmflow.RefType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.RefType;
  return proto.wasmflow.RefType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.RefType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.RefType}
 */
proto.wasmflow.RefType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.RefType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.RefType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.RefType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.RefType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.wasmflow.RefType.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wasmflow.RefType} returns this
 */
proto.wasmflow.RefType.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.StructType.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.StructType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.StructType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.StructType.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.StructType}
 */
proto.wasmflow.StructType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.StructType;
  return proto.wasmflow.StructType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.StructType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.StructType}
 */
proto.wasmflow.StructType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.StructType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.StructType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.StructType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.StructType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wasmflow.LinkType.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.LinkType.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.LinkType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.LinkType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.LinkType.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemasList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.LinkType}
 */
proto.wasmflow.LinkType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.LinkType;
  return proto.wasmflow.LinkType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.LinkType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.LinkType}
 */
proto.wasmflow.LinkType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSchemas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.LinkType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.LinkType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.LinkType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.LinkType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string schemas = 1;
 * @return {!Array<string>}
 */
proto.wasmflow.LinkType.prototype.getSchemasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.wasmflow.LinkType} returns this
 */
proto.wasmflow.LinkType.prototype.setSchemasList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.wasmflow.LinkType} returns this
 */
proto.wasmflow.LinkType.prototype.addSchemas = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wasmflow.LinkType} returns this
 */
proto.wasmflow.LinkType.prototype.clearSchemasList = function() {
  return this.setSchemasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.MapType.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.MapType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.MapType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.MapType.toObject = function(includeInstance, msg) {
  var f, obj = {
    keytype: (f = msg.getKeytype()) && proto.wasmflow.TypeSignature.toObject(includeInstance, f),
    valuetype: (f = msg.getValuetype()) && proto.wasmflow.TypeSignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.MapType}
 */
proto.wasmflow.MapType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.MapType;
  return proto.wasmflow.MapType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.MapType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.MapType}
 */
proto.wasmflow.MapType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.TypeSignature;
      reader.readMessage(value,proto.wasmflow.TypeSignature.deserializeBinaryFromReader);
      msg.setKeytype(value);
      break;
    case 2:
      var value = new proto.wasmflow.TypeSignature;
      reader.readMessage(value,proto.wasmflow.TypeSignature.deserializeBinaryFromReader);
      msg.setValuetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.MapType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.MapType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.MapType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.MapType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeytype();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.TypeSignature.serializeBinaryToWriter
    );
  }
  f = message.getValuetype();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wasmflow.TypeSignature.serializeBinaryToWriter
    );
  }
};


/**
 * optional TypeSignature keyType = 1;
 * @return {?proto.wasmflow.TypeSignature}
 */
proto.wasmflow.MapType.prototype.getKeytype = function() {
  return /** @type{?proto.wasmflow.TypeSignature} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.TypeSignature, 1));
};


/**
 * @param {?proto.wasmflow.TypeSignature|undefined} value
 * @return {!proto.wasmflow.MapType} returns this
*/
proto.wasmflow.MapType.prototype.setKeytype = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.MapType} returns this
 */
proto.wasmflow.MapType.prototype.clearKeytype = function() {
  return this.setKeytype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.MapType.prototype.hasKeytype = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TypeSignature valueType = 2;
 * @return {?proto.wasmflow.TypeSignature}
 */
proto.wasmflow.MapType.prototype.getValuetype = function() {
  return /** @type{?proto.wasmflow.TypeSignature} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.TypeSignature, 2));
};


/**
 * @param {?proto.wasmflow.TypeSignature|undefined} value
 * @return {!proto.wasmflow.MapType} returns this
*/
proto.wasmflow.MapType.prototype.setValuetype = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.MapType} returns this
 */
proto.wasmflow.MapType.prototype.clearValuetype = function() {
  return this.setValuetype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.MapType.prototype.hasValuetype = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.ListType.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.ListType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.ListType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.ListType.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && proto.wasmflow.TypeSignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.ListType}
 */
proto.wasmflow.ListType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.ListType;
  return proto.wasmflow.ListType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.ListType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.ListType}
 */
proto.wasmflow.ListType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.TypeSignature;
      reader.readMessage(value,proto.wasmflow.TypeSignature.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.ListType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.ListType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.ListType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.ListType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.TypeSignature.serializeBinaryToWriter
    );
  }
};


/**
 * optional TypeSignature type = 1;
 * @return {?proto.wasmflow.TypeSignature}
 */
proto.wasmflow.ListType.prototype.getType = function() {
  return /** @type{?proto.wasmflow.TypeSignature} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.TypeSignature, 1));
};


/**
 * @param {?proto.wasmflow.TypeSignature|undefined} value
 * @return {!proto.wasmflow.ListType} returns this
*/
proto.wasmflow.ListType.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.ListType} returns this
 */
proto.wasmflow.ListType.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.ListType.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wasmflow.OptionalType.prototype.toObject = function(opt_includeInstance) {
  return proto.wasmflow.OptionalType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wasmflow.OptionalType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.OptionalType.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && proto.wasmflow.TypeSignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wasmflow.OptionalType}
 */
proto.wasmflow.OptionalType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wasmflow.OptionalType;
  return proto.wasmflow.OptionalType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wasmflow.OptionalType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wasmflow.OptionalType}
 */
proto.wasmflow.OptionalType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wasmflow.TypeSignature;
      reader.readMessage(value,proto.wasmflow.TypeSignature.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wasmflow.OptionalType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wasmflow.OptionalType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wasmflow.OptionalType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wasmflow.OptionalType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wasmflow.TypeSignature.serializeBinaryToWriter
    );
  }
};


/**
 * optional TypeSignature type = 1;
 * @return {?proto.wasmflow.TypeSignature}
 */
proto.wasmflow.OptionalType.prototype.getType = function() {
  return /** @type{?proto.wasmflow.TypeSignature} */ (
    jspb.Message.getWrapperField(this, proto.wasmflow.TypeSignature, 1));
};


/**
 * @param {?proto.wasmflow.TypeSignature|undefined} value
 * @return {!proto.wasmflow.OptionalType} returns this
*/
proto.wasmflow.OptionalType.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wasmflow.OptionalType} returns this
 */
proto.wasmflow.OptionalType.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wasmflow.OptionalType.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.wasmflow.InternalType = {
  COMPONENTINPUT: 0
};

goog.object.extend(exports, proto.wasmflow);
